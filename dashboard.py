# -*- coding: utf-8 -*-
"""Dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1veWDn9PjyfY_Hj9EgyrO-zLvhPmGQ2FX
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load data
df = pd.read_csv('full_grouped.csv')

# Check missing values
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title('Missing Data Heatmap')
plt.show()

print(df.columns)

df.rename(columns={'Country/Region': 'Country'}, inplace=True)

import pandas as pd

# Load dataset
df = pd.read_csv('country_wise_latest.csv')

# Print column names
print(df.columns)

df.rename(columns={'Country/Region': 'Country'}, inplace=True)

df.columns = df.columns.str.strip()  # Remove leading/trailing spaces
print(df.columns)

pip install dash

import sys
!{sys.executable} -m pip install dash pandas plotly

import dash
import pandas as pd
import plotly.express as px
print("Libraries are installed correctly!")

!pip install dash pandas plotly

!pip install pyngrok

ngrok.set_auth_token("2qIqHbvZzkxzpHOJHsv3pMVN1dT_7pg68XT5Qjud2ZXKoUK1x")  # Replace with your actual ngrok authtoken

import dash
from dash import dcc, html
import pandas as pd
import plotly.express as px
from pyngrok import ngrok
from dash.dependencies import Input, Output

# Load the dataset
df = pd.read_csv('full_grouped.csv')  # Adjust to your dataset path

# Initialize the Dash app
app = dash.Dash(__name__)

# Layout of the dashboard
app.layout = html.Div([
    html.H1("COVID-19 Dashboard", style={'text-align': 'center'}),

    # Dropdown for selecting WHO region
    html.Div([
        html.Label("Select WHO Region:"),
        dcc.Dropdown(
            id="region_dropdown",
            options=[{"label": region, "value": region} for region in df["WHO Region"].unique()],
            value="Europe",  # Default value
        ),
    ]),

    # Graph for confirmed cases
    dcc.Graph(id="cases_graph"),
])

# Callback to update the graph based on dropdown selection
@app.callback(
    Output("cases_graph", "figure"),
    [Input("region_dropdown", "value")]
)
def update_graph(selected_region):
    filtered_df = df[df["WHO Region"] == selected_region]
    fig = px.choropleth(filtered_df,
                        locations="Country/Region",
                        locationmode="country names",
                        color="Confirmed",
                        hover_name="Country/Region",
                        color_continuous_scale="Reds",
                        title=f"COVID-19 Total Cases in {selected_region} by Country")
    return fig

# Run the app
if __name__ == "__main__":
    # Open a ngrok tunnel to the Dash app and specify the port directly
    public_url = ngrok.connect(8050)  # No need for a config dictionary, just pass the port
    print('Dash app is running at:', public_url)
    app.run_server(port=8050)

